<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="7" passed="1" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-26T11:14:21 IST" name="Suite" finished-at="2024-06-26T11:14:33 IST" duration-ms="11774">
    <groups>
    </groups>
    <test started-at="2024-06-26T11:14:21 IST" name="Test" finished-at="2024-06-26T11:14:33 IST" duration-ms="11774">
      <class name="Utility.TestBase">
        <test-method is-config="true" signature="tearUp(java.lang.String)[pri:0, instance:Utility.TestBase@b9b00e0]" started-at="2024-06-26T11:14:17 IST" name="tearUp" finished-at="2024-06-26T11:14:21 IST" duration-ms="4611" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearUp -->
        <test-method is-config="true" signature="startReport(java.lang.String)[pri:0, instance:Utility.TestBase@b9b00e0]" started-at="2024-06-26T11:14:21 IST" name="startReport" finished-at="2024-06-26T11:14:21 IST" duration-ms="191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:Utility.TestBase@b9b00e0]" started-at="2024-06-26T11:14:31 IST" name="flushReport" finished-at="2024-06-26T11:14:33 IST" duration-ms="1824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Utility.TestBase@b9b00e0]" started-at="2024-06-26T11:14:33 IST" name="tearDown" finished-at="2024-06-26T11:14:34 IST" duration-ms="1154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Utility.TestBase -->
      <class name="Tests.LoginPageTest">
        <test-method signature="failedTest()[pri:0, instance:Tests.LoginPageTest@4f80542f]" started-at="2024-06-26T11:14:21 IST" name="failedTest" finished-at="2024-06-26T11:14:21 IST" duration-ms="12" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Tests.LoginPageTest.failedTest(LoginPageTest.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method signature="loginTest()[pri:0, instance:Tests.LoginPageTest@4f80542f]" started-at="2024-06-26T11:14:21 IST" name="loginTest" finished-at="2024-06-26T11:14:31 IST" duration-ms="9723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="skippedTest()[pri:0, instance:Tests.LoginPageTest@4f80542f]" started-at="2024-06-26T11:14:21 IST" name="skippedTest" finished-at="2024-06-26T11:14:21 IST" duration-ms="10" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test Case with Exception..]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test Case with Exception..
at Tests.LoginPageTest.skippedTest(LoginPageTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skippedTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginPageTest@4f80542f]" started-at="2024-06-26T11:14:21 IST" name="getResult" finished-at="2024-06-26T11:14:21 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skippedTest status=SKIP method=LoginPageTest.skippedTest()[pri:0, instance:Tests.LoginPageTest@4f80542f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginPageTest@4f80542f]" started-at="2024-06-26T11:14:21 IST" name="getResult" finished-at="2024-06-26T11:14:21 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=failedTest status=FAILURE method=LoginPageTest.failedTest()[pri:0, instance:Tests.LoginPageTest@4f80542f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests.LoginPageTest@4f80542f]" started-at="2024-06-26T11:14:31 IST" name="getResult" finished-at="2024-06-26T11:14:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SUCCESS method=LoginPageTest.loginTest()[pri:0, instance:Tests.LoginPageTest@4f80542f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- Tests.LoginPageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
